[{"C:\\Users\\nphmi\\MagellanInternship\\csv-to-xml\\client\\src\\App.js":"1","C:\\Users\\nphmi\\MagellanInternship\\csv-to-xml\\client\\src\\reportWebVitals.js":"2","C:\\Users\\nphmi\\MagellanInternship\\csv-to-xml\\client\\src\\index.js":"3","C:\\Users\\nphmi\\MagellanInternship\\csv-to-xml\\client\\src\\components\\client\\ClientScreen.js":"4","C:\\Users\\nphmi\\MagellanInternship\\csv-to-xml\\client\\src\\components\\Dashboard.js":"5","C:\\Users\\nphmi\\MagellanInternship\\csv-to-xml\\client\\src\\components\\notifications\\NotificationScreen.js":"6","C:\\Users\\nphmi\\MagellanInternship\\csv-to-xml\\client\\src\\components\\client\\ClientList.js":"7","C:\\Users\\nphmi\\MagellanInternship\\csv-to-xml\\client\\src\\components\\admin\\AdminSummary.js":"8"},{"size":500,"mtime":1606891391889,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1606832878036,"results":"11","hashOfConfig":"10"},{"size":500,"mtime":1606832878036,"results":"12","hashOfConfig":"10"},{"size":838,"mtime":1606893727447,"results":"13","hashOfConfig":"10"},{"size":8878,"mtime":1606893716755,"results":"14","hashOfConfig":"10"},{"size":6177,"mtime":1606893749357,"results":"15","hashOfConfig":"10"},{"size":1805,"mtime":1606893727418,"results":"16","hashOfConfig":"10"},{"size":632,"mtime":1606893721893,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jufcu",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\nphmi\\MagellanInternship\\csv-to-xml\\client\\src\\App.js",[],"C:\\Users\\nphmi\\MagellanInternship\\csv-to-xml\\client\\src\\reportWebVitals.js",[],"C:\\Users\\nphmi\\MagellanInternship\\csv-to-xml\\client\\src\\index.js",[],"C:\\Users\\nphmi\\MagellanInternship\\csv-to-xml\\client\\src\\components\\client\\ClientScreen.js",[],"C:\\Users\\nphmi\\MagellanInternship\\csv-to-xml\\client\\src\\components\\Dashboard.js",["38","39","40","41","42","43"],"import React from \"react\";\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\n// Intro\r\n// Notifications\r\n// Mapping\r\n//  - Saved\r\n//  - Dropzone\r\n// Clients\r\n//  - Clients\r\n//  - FTPs\r\n// Admins\r\n\r\nimport adminImage from \"../images/Admins.PNG\";\r\nimport clientImage from \"../images/Clients.PNG\";\r\nimport dropzoneImage from \"../images/Dropzone.PNG\";\r\nimport serverImage from \"../images/FTPServers.PNG\";\r\nimport notiImage from \"../images/Notifications.PNG\";\r\nimport savedImage from \"../images/SavedMapping.PNG\";\r\n\r\nvar Scroll = require('react-scroll');\r\nvar scroll = Scroll.animateScroll;\r\n\r\nclass Dashboard extends React.Component {\r\n    handleScroll = (e) => {\r\n        scroll.scrollTo(e.target.value)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <CSSTransition in={true} appear={true} timeout={1000} classNames=\"fade\">\r\n                <div className=\"container section\">\r\n                    <div className=\"card\" style={{ borderRadius: 10 }}>\r\n                        <div className=\"card-content\">\r\n                            <h3>MAGELLAN CSV TO XML SYSTEM</h3>\r\n                            <div style={{ fontSize: 16 }}>This is a system designed for Magellan Logistics Company to translate\r\n                        customer's input CSV file to XML file to load into FTP server.</div>\r\n                            <div style={{ fontSize: 16 }}>The system consists of 6 main components:</div>\r\n                            <div className=\"row\" style={{ fontSize: 18 }}>\r\n                                <div className=\"col s4\">\r\n                                    <li value={315} onClick={(e) => this.handleScroll(e)} style={{ color: \"#0078bf\" }}>Notifications</li>\r\n                                    <li value={1100} onClick={(e) => this.handleScroll(e)} style={{ color: \"#0078bf\" }}>Create Mapping</li>\r\n                                    <li value={1880} onClick={(e) => this.handleScroll(e)} style={{ color: \"#0078bf\" }}>FTP Servers</li>\r\n                                </div>\r\n                                <div className=\"col s8\">\r\n                                    <li value={700} onClick={(e) => this.handleScroll(e)} style={{ color: \"#0078bf\" }}>Saved Mapping</li>\r\n                                    <li value={1500} onClick={(e) => this.handleScroll(e)} style={{ color: \"#0078bf\" }}>Clients</li>\r\n                                    <li value={2020} onClick={(e) => this.handleScroll(e)} style={{ color: \"#0078bf\" }}>Admins</li>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card\" style={{ borderRadius: 10 }}>\r\n                        <div className=\"card-content\">\r\n                            <h4>Notifications</h4>\r\n                            <div className=\"row\">\r\n                                <div className=\"col s6\" style={{ fontSize: 18 }}>\r\n                                    <div>This screen shows all the notifications created while processing CSV files,\r\n                                    including all success and error cases</div>\r\n                                    <br />\r\n                                    <div>The user can use the filter options on the right of the screen to filter\r\n                                    some information including: the notification type and the client code</div>\r\n                                </div>\r\n                                <div className=\"col s6\">\r\n                                    <img style={{ width: 480, borderRadius: 10 }} src={notiImage} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card\" style={{ borderRadius: 10 }}>\r\n                        <div className=\"card-content\">\r\n                            <h4>Saved Mapping</h4>\r\n                            <div className=\"row\">\r\n                                <div className=\"col s6\">\r\n                                    <img style={{ width: 480, borderRadius: 10 }} src={savedImage} />\r\n                                </div>\r\n                                <div className=\"col s6\" style={{ fontSize: 18 }}>\r\n                                    <div>This screen shows all the saved mapping information\r\n                                    of each existing client</div>\r\n                                    <br />\r\n                                    <div>The user can choose the client code from the dropdown list\r\n                                    to view that client's mapping information</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card\" style={{ borderRadius: 10 }}>\r\n                        <div className=\"card-content\">\r\n                            <h4>Create Mapping</h4>\r\n                            <div className=\"row\">\r\n                                <div className=\"col s6\" style={{ fontSize: 18 }}>\r\n                                    <div>This screen allows the user to create new mapping information for a client by choosing the client code\r\n                                    from the dropdownlist, and dropping a CSV file containing all mapping information of the client</div>\r\n                                </div>\r\n                                <div className=\"col s6\">\r\n                                    <img style={{ width: 480, borderRadius: 10 }} src={dropzoneImage} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card\" style={{ borderRadius: 10 }}>\r\n                        <div className=\"card-content\">\r\n                            <h4>Clients</h4>\r\n                            <div className=\"row\">\r\n                                <div className=\"col s6\">\r\n                                    <img style={{ width: 480, borderRadius: 10 }} src={clientImage} />\r\n                                </div>\r\n                                <div className=\"col s6\" style={{ fontSize: 18 }}>\r\n                                    <div>This screen shows all the client information stored in the system's database</div>\r\n                                    <br />\r\n                                    <div>The user can add, edit, or delete the client information.\r\n                                    The user can also view client's FTP server information</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card\" style={{ borderRadius: 10 }}>\r\n                        <div className=\"card-content\">\r\n                            <h4>FTP Servers</h4>\r\n                            <div className=\"row\">\r\n                                <div className=\"col s6\" style={{ fontSize: 18 }}>\r\n                                    <div>This screen shows all FTP server information of a particular client, chosen in Clients screen</div>\r\n                                    <br />\r\n                                    <div>The user can add, edit, or delete the FTP server's information</div>\r\n                                </div>\r\n                                <div className=\"col s6\">\r\n                                    <img style={{ width: 480, borderRadius: 10 }} src={serverImage} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card\" style={{ borderRadius: 10 }}>\r\n                        <div className=\"card-content\">\r\n                            <h4>Admins</h4>\r\n                            <div className=\"row\">\r\n                                <div className=\"col s6\">\r\n                                    <img style={{ width: 480, borderRadius: 10 }} src={adminImage} />\r\n                                </div>\r\n                                <div className=\"col s6\" style={{ fontSize: 18 }}>\r\n                                    <div>This screen shows all admins' email address. Whenever an error occurs within the system,\r\n                                    an email will be sent to these provided admins' email adress with detailed information of the error.\r\n                                </div>\r\n                                    <br />\r\n                                    <div>The user can add or delete the admins' email address</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </CSSTransition >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Dashboard",["44","45"],"C:\\Users\\nphmi\\MagellanInternship\\csv-to-xml\\client\\src\\components\\notifications\\NotificationScreen.js",["46","47","48","49"],"// Notification Screen\r\n\r\nimport React from 'react';\r\nimport NotificationList from \"./NotificationList\";\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nclass NotificationScreen extends React.Component {\r\n    state = {\r\n        notifications: [],\r\n        currentNotifications: [],\r\n        clients: [],\r\n        chosenClient: '',\r\n        chosenStatus: '',\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        // in routes/notification.js\r\n        window.fetch('/notif')\r\n            .then(response => response.json())\r\n            .then(resp => {\r\n                this.setState({ notifications: resp });\r\n                this.setState({ currentNotifications: resp });\r\n            })\r\n            .catch(err => console.log(err));\r\n        // in routes/client.js\r\n        window.fetch('/client').then(response => response.json())\r\n            .then(resp => { this.setState({ clients: resp }) })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    filterStatus = (e) => {\r\n        this.setState({ chosenStatus: e.target.value });\r\n        if (e.target.value === '') {\r\n            if (this.state.chosenClient === '') {\r\n                this.setState({ currentNotifications: this.state.notifications });\r\n            } else {\r\n                var notis = [];\r\n                this.state.notifications.forEach(noti => {\r\n                    if (noti.client === this.state.chosenClient) notis.push(noti);\r\n                });\r\n                this.setState({ currentNotifications: notis });\r\n            }\r\n        } else {\r\n            if (this.state.chosenClient === '') {\r\n                var notis = [];\r\n                this.state.notifications.forEach(noti => {\r\n                    if (noti.notificationType === e.target.value) notis.push(noti);\r\n                });\r\n                this.setState({ currentNotifications: notis });\r\n            } else {\r\n                var notis = [];\r\n                this.state.notifications.forEach(noti => {\r\n                    if (noti.notificationType === e.target.value && noti.client === this.state.chosenClient)\r\n                        notis.push(noti);\r\n                });\r\n                this.setState({ currentNotifications: notis });\r\n            }\r\n        }\r\n    }\r\n\r\n    filterClient = (e) => {\r\n        this.setState({ chosenClient: e.target.value });\r\n        if (e.target.value === '') {\r\n            if (this.state.chosenStatus === '') {\r\n                this.setState({ currentNotifications: this.state.notifications });\r\n            } else {\r\n                var notis = [];\r\n                this.state.notifications.forEach(noti => {\r\n                    if (noti.notificationType === this.state.chosenStatus) notis.push(noti);\r\n                });\r\n                this.setState({ currentNotifications: notis });\r\n            }\r\n        } else {\r\n            if (this.state.chosenStatus === '') {\r\n                var notis = [];\r\n                this.state.notifications.forEach(noti => {\r\n                    if (noti.client === e.target.value) notis.push(noti);\r\n                });\r\n                this.setState({ currentNotifications: notis });\r\n            } else {\r\n                var notis = [];\r\n                this.state.notifications.forEach(noti => {\r\n                    if (noti.client === e.target.value && noti.notificationType === this.state.chosenStatus) notis.push(noti);\r\n                });\r\n                this.setState({ currentNotifications: notis });\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { currentNotifications, clients } = this.state;\r\n        return (\r\n            <CSSTransition in={true} appear={true} timeout={1000} classNames=\"fade\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s1\"></div>\r\n                    <div className=\"col s7\">\r\n                        <NotificationList notifications={currentNotifications} />\r\n                    </div>\r\n                    <div className=\"col s3\">\r\n                        <div className=\"section\">\r\n                            <div className=\"card\" style={{ borderRadius: 10 }}>\r\n                                <div className=\"card-content\">\r\n                                    <h5>Filter Options</h5>\r\n                                    <div className=\"input-field\">\r\n                                        <select className=\"browser-default\" onChange={(e) => { this.filterStatus(e) }}>\r\n                                            <option value='' selected>Status</option>\r\n                                            <option value='success'>Success</option>\r\n                                            <option value='Some mapping fields cannot be found in the input file.'>Some mapping fields cannot be found in the input file.</option>\r\n                                            <option value='mandatory fields missing'>Mandatory fields missing</option>\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"input-field\">\r\n                                        <select className=\"browser-default\" onChange={(e) => { this.filterClient(e) }}>\r\n                                            <option value='' selected>Client Code</option>\r\n                                            {clients && clients.map(client => {\r\n                                                return <option value={client.id}>Client {client.id}</option>\r\n                                            })}\r\n                                        </select>\r\n                                    </div>\r\n                                    <button className=\"btn lighten-1 z-depth-0\"\r\n                                        style={{ backgroundColor: \"#0078bf\" }}\r\n                                        onClick={() => window.location.reload(false)}>Clear Filter</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col s1\"></div>\r\n                </div>\r\n            </CSSTransition>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NotificationScreen\r\n",["50","51"],"C:\\Users\\nphmi\\MagellanInternship\\csv-to-xml\\client\\src\\components\\client\\ClientList.js",[],"C:\\Users\\nphmi\\MagellanInternship\\csv-to-xml\\client\\src\\components\\admin\\AdminSummary.js",[],{"ruleId":"52","severity":1,"message":"53","line":65,"column":37,"nodeType":"54","endLine":65,"endColumn":101},{"ruleId":"52","severity":1,"message":"53","line":75,"column":37,"nodeType":"54","endLine":75,"endColumn":102},{"ruleId":"52","severity":1,"message":"53","line":96,"column":37,"nodeType":"54","endLine":96,"endColumn":105},{"ruleId":"52","severity":1,"message":"53","line":106,"column":37,"nodeType":"54","endLine":106,"endColumn":103},{"ruleId":"52","severity":1,"message":"53","line":127,"column":37,"nodeType":"54","endLine":127,"endColumn":103},{"ruleId":"52","severity":1,"message":"53","line":137,"column":37,"nodeType":"54","endLine":137,"endColumn":102},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":45,"column":21,"nodeType":"61","messageId":"62","endLine":45,"endColumn":26},{"ruleId":"59","severity":1,"message":"60","line":51,"column":21,"nodeType":"61","messageId":"62","endLine":51,"endColumn":26},{"ruleId":"59","severity":1,"message":"60","line":75,"column":21,"nodeType":"61","messageId":"62","endLine":75,"endColumn":26},{"ruleId":"59","severity":1,"message":"60","line":81,"column":21,"nodeType":"61","messageId":"62","endLine":81,"endColumn":26},{"ruleId":"55","replacedBy":"63"},{"ruleId":"57","replacedBy":"64"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-redeclare","'notis' is already defined.","Identifier","redeclared",["65"],["66"],"no-global-assign","no-unsafe-negation"]
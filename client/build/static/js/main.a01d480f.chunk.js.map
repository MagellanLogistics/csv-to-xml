{"version":3,"sources":["images/magellanLogo.png","components/layout/NavBar.js","components/notifications/NotificationSummary.js","components/notifications/NotificationList.js","components/notifications/NotificationScreen.js","components/layout/MappingSideBar.js","components/mapping/Mapping.js","components/mapping/Dropzone.js","components/mapping/DropFile.js","components/client/ClientSummary.js","components/client/ClientList.js","components/client/CreateClient.js","components/client/ClientScreen.js","components/client/EditClient.js","components/ftp/CreateFTP.js","components/ftp/FTPSummary.js","components/ftp/FTPScreen.js","components/ftp/EditFTP.js","components/admin/AdminSummary.js","components/admin/AdminList.js","components/admin/CreateAdmin.js","components/admin/AdminScreen.js","images/Admins.PNG","images/Clients.PNG","images/Dropzone.PNG","images/FTPServers.PNG","images/Notifications.PNG","images/SavedMapping.PNG","components/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","className","to","style","height","src","magellanLogo","color","activeStyle","backgroundColor","React","Component","NotificationSummary","notification","notificationType","borderRadius","csvFile","client","time","NotificationList","notifications","map","NotificationScreen","state","currentNotifications","clients","chosenClient","chosenStatus","componentDidMount","axios","get","then","res","setState","data","catch","error","console","log","filterStatus","e","target","value","notis","forEach","noti","push","filterClient","this","CSSTransition","in","appear","timeout","classNames","onChange","selected","id","onClick","window","location","reload","MappingSideBar","Dictionary","existDictionary","existDefaultValue","dicdef","clientId","response","marginTop","marginBottom","padding","width","disabled","textAlign","item","customerField","magellanField","customerValue","magellanValue","defaultValue","csv","require","Dropzone","files","onDrop","acceptedFiles","rejectedFiles","file","reader","FileReader","onload","fileAsBinaryString","result","noheader","output","fromString","csvRows","toJson","aCsvRow","i","builtObject","Object","keys","aKey","valueToAddInBuiltObject","replace","keyToAddInBuiltObject","getjson","props","onabort","onerror","readAsText","children","justifyContent","display","f","name","size","DropFile","mappingResult","handleSave","processDictionary","processDefaultValues","element","CustomerField","MagellanField","CustomerValue","MagellanValue","dictionaryInfo","dictionaryV","post","defaultInfo","defaultV","alert","mappingSmall","key","ClientSummary","onRemove","fontSize","clientName","ClientList","handleRemove","confirmAlert","title","message","buttons","label","handleYes","delete","filter","el","CreateClient","clientCode","handleChange","handleSubmit","onSubmit","htmlFor","type","ClientScreen","EditClient","theClient","match","params","CreateFTP","host","port","pathInputs","pathProcess","pathError","pathOutputs","user","password","created","FTPSummary","ftp","FTPScreen","ftps","_id","length","EditFTP","theFTP","AdminSummary","admin","email","AdminList","admins","CreateAdmin","AdminScreen","scroll","animateScroll","Dashboard","handleScroll","scrollTo","notiImage","savedImage","dropzoneImage","clientImage","serverImage","adminImage","App","exact","path","component","Mapping","Admin","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a01d480f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/magellanLogo.34328cf8.png\";","// Navigation Bar component\r\n\r\nimport React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport magellanLogo from \"../../images/magellanLogo.png\";\r\n\r\nclass NavBar extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"navbar-fixed\">\r\n                <nav className=\"nav-wrapper white fixed\">\r\n                    <div className=\"container\">\r\n                        <Link to='/' className=\"brand-logo left\">\r\n                            <img style={{ height: 60 }} src={magellanLogo} />\r\n                        </Link>\r\n                        <ul className=\"right\">\r\n                            <li><NavLink to='/notification' style={{ color: \"black\" }}\r\n                                activeStyle={{ backgroundColor: '#0078bf', color: \"white\" }}>Notifications</NavLink></li>\r\n                            <li><NavLink to='/mapping' style={{ color: \"black\" }}\r\n                                activeStyle={{ backgroundColor: '#0078bf', color: \"white\" }}>Mapping</NavLink></li>\r\n                            <li><NavLink to='/client' style={{ color: \"black\" }}\r\n                                activeStyle={{ backgroundColor: '#0078bf', color: \"white\" }}>Clients</NavLink></li>\r\n                            <li><NavLink to='/admin' style={{ color: \"black\" }}\r\n                                activeStyle={{ backgroundColor: '#0078bf', color: \"white\" }}>Admins</NavLink></li>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default NavBar;","// Details on each notification on notification screen.\r\n\r\nimport React from 'react';\r\n\r\nconst NotificationSummary = ({ notification }) => {\r\n    if (notification.notificationType === 'Mandatory fields missing' || notification.notificationType === 'Some mapping fields cannot be found in the input file.') {\r\n        return (\r\n            <div className=\"card\" style={{ borderRadius: 10 }}>\r\n                <div className=\"card-content\">\r\n                    <h5 className=\"red-text\">Status: {notification.notificationType}</h5>\r\n                    <p>CSV File: {notification.csvFile}</p>\r\n                    <div className=\"row\">\r\n                        <p className=\"col s5\">Client Code: {notification.client}</p>\r\n                        <p className=\"grey-text col s7\">Timestamp: {notification.time}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div className=\"card\" style={{ borderRadius: 10 }}>\r\n                <div className=\"card-content\">\r\n                    <h5>Status: {notification.notificationType}</h5>\r\n                    <div className=\"row\">\r\n                        <p className=\"col s5\">Client Code: {notification.client}</p>\r\n                        <p className=\"grey-text col s7\">Timestamp: {notification.time}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default NotificationSummary;","// List of notifications inside notification screen\r\n\r\nimport React from 'react';\r\nimport NotificationSummary from './NotificationSummary';\r\n\r\nconst NotificationList = ({ notifications }) => {\r\n    return (\r\n        <div className=\"section\">\r\n            {notifications && notifications.map(notification => {\r\n                return <NotificationSummary notification={notification} />\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotificationList;","// Notification Screen\r\n\r\nimport React from 'react';\r\nimport NotificationList from \"./NotificationList\";\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport axios from 'axios';\r\n\r\nclass NotificationScreen extends React.Component {\r\n    state = {\r\n        notifications: [],\r\n        currentNotifications: [],\r\n        clients: [],\r\n        chosenClient: '',\r\n        chosenStatus: '',\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        // get notification list\r\n        axios.get('/notifications').then(res => this.setState({\r\n            notifications: res.data,\r\n            currentNotifications: res.data\r\n        })).catch(error => console.log(error));\r\n        // get client list\r\n        axios.get('/clients').then(res => this.setState({ clients: res.data }))\r\n            .catch(error => console.log(error));\r\n    };\r\n\r\n    filterStatus = e => {\r\n        this.setState({ chosenStatus: e.target.value });\r\n        if (e.target.value === '') {\r\n            if (this.state.chosenClient === '') {\r\n                this.setState({ currentNotifications: this.state.notifications });\r\n            } else {\r\n                var notis = [];\r\n                this.state.notifications.forEach(noti => {\r\n                    if (noti.client === this.state.chosenClient) notis.push(noti);\r\n                });\r\n                this.setState({ currentNotifications: notis });\r\n            }\r\n        } else {\r\n            if (this.state.chosenClient === '') {\r\n                var notis = [];\r\n                this.state.notifications.forEach(noti => {\r\n                    if (noti.notificationType === e.target.value) notis.push(noti);\r\n                });\r\n                this.setState({ currentNotifications: notis });\r\n            } else {\r\n                var notis = [];\r\n                this.state.notifications.forEach(noti => {\r\n                    if (noti.notificationType === e.target.value && noti.client === this.state.chosenClient)\r\n                        notis.push(noti);\r\n                });\r\n                this.setState({ currentNotifications: notis });\r\n            };\r\n        };\r\n    };\r\n\r\n    filterClient = e => {\r\n        this.setState({ chosenClient: e.target.value });\r\n        if (e.target.value === '') {\r\n            if (this.state.chosenStatus === '') {\r\n                this.setState({ currentNotifications: this.state.notifications });\r\n            } else {\r\n                var notis = [];\r\n                this.state.notifications.forEach(noti => {\r\n                    if (noti.notificationType === this.state.chosenStatus) notis.push(noti);\r\n                });\r\n                this.setState({ currentNotifications: notis });\r\n            };\r\n        } else {\r\n            if (this.state.chosenStatus === '') {\r\n                var notis = [];\r\n                this.state.notifications.forEach(noti => {\r\n                    if (noti.client === e.target.value) notis.push(noti);\r\n                });\r\n                this.setState({ currentNotifications: notis });\r\n            } else {\r\n                var notis = [];\r\n                this.state.notifications.forEach(noti => {\r\n                    if (noti.client === e.target.value && noti.notificationType === this.state.chosenStatus) notis.push(noti);\r\n                });\r\n                this.setState({ currentNotifications: notis });\r\n            };\r\n        };\r\n    };\r\n\r\n    render() {\r\n        const { currentNotifications, clients } = this.state;\r\n        return (\r\n            <CSSTransition in={true} appear={true} timeout={1000} classNames=\"fade\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s1\"></div>\r\n                    <div className=\"col s7\">\r\n                        <NotificationList notifications={currentNotifications} />\r\n                    </div>\r\n                    <div className=\"col s3\">\r\n                        <div className=\"section\">\r\n                            <div className=\"card\" style={{ borderRadius: 10 }}>\r\n                                <div className=\"card-content\">\r\n                                    <h5>Filter Options</h5>\r\n                                    <div className=\"input-field\">\r\n                                        <select className=\"browser-default\" onChange={(e) => { this.filterStatus(e) }}>\r\n                                            <option value='' selected>Status</option>\r\n                                            <option value='success'>Success</option>\r\n                                            <option value='Some mapping fields cannot be found in the input file.'>Some mapping fields cannot be found in the input file.</option>\r\n                                            <option value='mandatory fields missing'>Mandatory fields missing</option>\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"input-field\">\r\n                                        <select className=\"browser-default\" onChange={(e) => { this.filterClient(e) }}>\r\n                                            <option value='' selected>Client Code</option>\r\n                                            {clients && clients.map(client => {\r\n                                                return <option value={client.id}>Client {client.id}</option>\r\n                                            })}\r\n                                        </select>\r\n                                    </div>\r\n                                    <button className=\"btn lighten-1 z-depth-0\"\r\n                                        style={{ backgroundColor: \"#0078bf\" }}\r\n                                        onClick={() => window.location.reload(false)}>Clear Filter</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col s1\"></div>\r\n                </div>\r\n            </CSSTransition>\r\n        );\r\n    };\r\n};\r\n\r\nexport default NotificationScreen;\r\n","// Side Bar component for mapping option\r\n\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass MappingSideBar extends React.Component {\r\n    render() {\r\n        return (\r\n            <ul id=\"slide-out\" className=\"sidenav sidenav-fixed\">\r\n                <li><NavLink to='/mapping' activeStyle={{ backgroundColor: '#DDD' }}>Saved Mapping</NavLink></li>\r\n                <li><NavLink to='/mapping-drop-file' activeStyle={{ backgroundColor: '#DDD' }}>Create Mapping</NavLink></li>\r\n            </ul>\r\n        );\r\n    };\r\n};\r\n\r\nexport default MappingSideBar;","// Saved mapping screen for each client.\r\n\r\nimport React from 'react';\r\nimport MappingSideBar from '../layout/MappingSideBar';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport axios from 'axios';\r\n\r\nclass Dictionary extends React.Component {\r\n    state = {\r\n        existDictionary: [],\r\n        existDefaultValue: [],\r\n        clients: [],\r\n    };\r\n\r\n    dicdef = clientId => {\r\n        // in routes/mapping.js\r\n        axios.get('/dictionary/' + clientId).then(response => {\r\n            this.setState({ existDictionary: response.data });\r\n        }).catch(error => console.log(error));\r\n\r\n        // in routes/mapping.js\r\n        axios.get('/defaultvalue/' + clientId).then(response => {\r\n            this.setState({ existDefaultValue: response.data });\r\n        }).catch(error => console.log(error));\r\n    };\r\n\r\n    componentDidMount() {\r\n        // get client list.\r\n        axios.get('/clients').then(response => {\r\n            this.setState({ clients: response.data });\r\n        }).catch(error => console.log(error));\r\n    };\r\n\r\n    render() {\r\n        const { clients, existDefaultValue, existDictionary } = this.state\r\n        return (\r\n            <div className=\"section\">\r\n                <MappingSideBar />\r\n                <CSSTransition in={true} appear={true} timeout={1000} classNames=\"fade\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col s2\"></div>\r\n                        <div className=\"col s9\">\r\n                            <div style={{ marginTop: 10, marginBottom: 50, padding: 12, borderRadius: 10 }} className=\"section white\">\r\n                                <div className=\"input-field\">\r\n                                    <select className=\"browser-default\" style={{ width: 250, backgroundColor: '#DDD' }} onChange={(e) => {\r\n                                        this.dicdef(e.target.value);\r\n                                    }}>\r\n                                        <option value=\"\" disabled selected>Choose client code to view: </option>\r\n                                        {clients.map(client => {\r\n                                            return <option value={client.id}>Client {client.id}</option>\r\n                                        })}\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col s8\">\r\n                                        <h5 style={{ textAlign: \"center\" }}>Fields Dictionary</h5>\r\n                                    </div>\r\n                                    <div className=\"col s4\">\r\n                                        <h5 style={{ textAlign: \"center\" }}>Default Values</h5>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col s8\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"pink-text col s3 zone\">Customer Field</div>\r\n                                            <div className=\"pink-text col s3 zone\">Magellan Field</div>\r\n                                            <div className=\"pink-text col s3 zone\">Customer Value</div>\r\n                                            <div className=\"pink-text col s3 zone\">Magellan Value</div>\r\n                                        </div>\r\n                                        {existDictionary.map(item => {\r\n                                            return (\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col s3 zone\">{item.customerField}</div>\r\n                                                    <div className=\"col s3 zone\">{item.magellanField}</div>\r\n                                                    <div className=\"col s3 zone\">{item.customerValue}</div>\r\n                                                    <div className=\"col s3 zone\">{item.magellanValue}</div>\r\n                                                </div>\r\n                                            )\r\n                                        })}\r\n                                    </div>\r\n                                    <div className=\"col s4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"pink-text col s6 zone\">Magellan Field</div>\r\n                                            <div className=\"pink-text col s6 zone\">Default Value</div>\r\n                                        </div>\r\n                                        {existDefaultValue.map(item => {\r\n                                            return (\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col s6 zone\">{item.magellanField}</div>\r\n                                                    <div className=\"col s6 zone\">{item.defaultValue}</div>\r\n                                                </div>\r\n                                            )\r\n                                        })}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col s1\"></div>\r\n                    </div>\r\n                </CSSTransition>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default Dictionary;","// Decide how the dropzone inside drop file screen reads data.\r\n\r\nimport React from 'react';\r\nimport RDropzone from 'react-dropzone';\r\nconst csv = require('csvtojson');\r\n\r\nclass Dropzone extends React.Component {\r\n    state = {\r\n        files: [],\r\n    };\r\n\r\n    onDrop = (acceptedFiles, rejectedFiles) => {\r\n        this.setState({\r\n            files: acceptedFiles\r\n        });\r\n\r\n        acceptedFiles.forEach(file => {\r\n            const reader = new FileReader();\r\n\r\n            reader.onload = () => {\r\n                const fileAsBinaryString = reader.result;\r\n\r\n                csv({ noheader: true, output: \"json\" })\r\n                    .fromString(fileAsBinaryString)\r\n                    .then(csvRows => {\r\n                        const toJson = []\r\n                        csvRows.forEach((aCsvRow, i) => {\r\n                            if (i !== 0) {\r\n                                const builtObject = {}\r\n                                Object.keys(aCsvRow).forEach(aKey => {\r\n                                    const valueToAddInBuiltObject = aCsvRow[aKey].replace(/\\s+/g, '');\r\n                                    const keyToAddInBuiltObject = csvRows[0][aKey].replace(/\\s+/g, '');\r\n                                    builtObject[keyToAddInBuiltObject] = valueToAddInBuiltObject;\r\n                                })\r\n                                toJson.push(builtObject);\r\n                            }\r\n                        });\r\n                        const { getjson } = this.props;\r\n                        getjson(toJson);\r\n                    })\r\n            };\r\n\r\n            reader.onabort = () => console.log('file reading was aborted');\r\n            reader.onerror = () => console.log('file reading has failed');\r\n\r\n            reader.readAsText(file, 'ISO-8859-1');\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { children } = this.props\r\n        return (\r\n            <div>\r\n                <section style={{ justifyContent: \"center\", display: \"flex\" }}>\r\n                    <RDropzone onDrop={this.onDrop} {...this.props}>\r\n                        {children}\r\n                    </RDropzone>\r\n                </section>\r\n                <div>{this.state.files.map(f => <div key={f.name}>File Name: {f.name} - {f.size} bytes</div>)}</div>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default Dropzone;","// Screen to drop CSV file to use as mapping.\r\n\r\nimport React from 'react';\r\nimport MappingSideBar from '../layout/MappingSideBar';\r\nimport Dropzone from './Dropzone';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport axios from 'axios';\r\n\r\nclass DropFile extends React.Component {\r\n    state = {\r\n        mappingResult: [],\r\n        clients: null,\r\n        chosenClient: null,\r\n    };\r\n\r\n    componentDidMount() {\r\n        // get client list\r\n        axios.get('/clients').then(res => this.setState({ clients: res.data }))\r\n            .catch(error => console.log(error));\r\n    };\r\n\r\n    handleSave = () => {\r\n        const { mappingResult, chosenClient } = this.state\r\n        if (chosenClient) {\r\n            if (mappingResult) {\r\n                let processDictionary = {\r\n                    magellanField: [],\r\n                    customerField: [],\r\n                    customerValue: [],\r\n                    magellanValue: []\r\n                };\r\n                let processDefaultValues = {\r\n                    magellanField: [],\r\n                    defaultValue: []\r\n                };\r\n                processDefaultValues.magellanField.push('ClientCode');\r\n                processDefaultValues.defaultValue.push(chosenClient);\r\n                mappingResult.forEach(element => {\r\n                    if (element.CustomerField !== '') {\r\n                        processDictionary.magellanField.push(element.MagellanField);\r\n                        processDictionary.customerField.push(element.CustomerField);\r\n                        processDictionary.customerValue.push(element.CustomerValue);\r\n                        processDictionary.magellanValue.push(element.MagellanValue);\r\n                    } else {\r\n                        processDefaultValues.magellanField.push(element.MagellanField);\r\n                        processDefaultValues.defaultValue.push(element.MagellanValue);\r\n                    };\r\n                });\r\n\r\n                const dictionaryInfo = {\r\n                    dictionaryV: processDictionary,\r\n                    client: chosenClient\r\n                };\r\n                // in routes/mapping.js\r\n                axios.post('/dictionary/save', dictionaryInfo)\r\n                    .then(res => console.log(res.data));\r\n\r\n                const defaultInfo = {\r\n                    defaultV: processDefaultValues,\r\n                    client: chosenClient\r\n                };\r\n                // in routes/mapping.js\r\n                axios.post('/defaultvalue/save', defaultInfo)\r\n                    .then(res => console.log(res.data));\r\n\r\n                alert(\"Data Stored in Firestore\");\r\n\r\n                window.location = \"/mapping\";\r\n\r\n            } else alert(\"Please Drop a Mapping File\");\r\n        } else alert('Please Choose Client Code');\r\n    }\r\n\r\n    render() {\r\n        const { mappingResult, clients } = this.state\r\n        return (\r\n            <div className=\"section\">\r\n                <MappingSideBar />\r\n                <CSSTransition in={true} appear={true} timeout={1000} classNames=\"fade\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col s2\"></div>\r\n                        <div className=\"col s9\">\r\n                            <div className=\"section white\" style={{ marginTop: 10, marginBottom: 50, padding: 12, borderRadius: 10 }}>\r\n                                <div className=\"input-field\">\r\n                                    <select className=\"browser-default\" style={{ width: 250, backgroundColor: '#DDD' }} onChange={(e) => {\r\n                                        this.setState({ chosenClient: e.target.value })\r\n                                    }}>\r\n                                        <option value=\"\" disabled selected>Choose client code to view: </option>\r\n                                        {clients && clients.map(client => {\r\n                                            return <option value={client.id}>Client {client.id}</option>\r\n                                        })}\r\n                                    </select>\r\n                                </div>\r\n                                <h5 style={{ textAlign: \"center\" }}>Drop Mapping File to store in database</h5>\r\n                                <div style={{ justifyContent: \"center\", display: \"flex\" }}>\r\n                                    <Dropzone\r\n                                        getjson={mappingResult => {\r\n                                            this.setState({ mappingResult });\r\n                                        }}>\r\n                                        <p style={{ textAlign: \"center\" }}>Drop Mapping File Here</p>\r\n                                        <p style={{ textAlign: \"center\" }}>Or</p>\r\n                                        <p style={{ textAlign: \"center\" }}>Click to Browse</p>\r\n                                    </Dropzone>\r\n                                </div>\r\n                                <div className=\"row\" style={{ marginTop: 50 }}>\r\n                                    <div className=\"pink-text col s3 zone\">Magellan Fields</div>\r\n                                    <div className=\"pink-text col s3 zone\">Customer Fields</div>\r\n                                    <div className=\"pink-text col s3 zone\">Customer Values</div>\r\n                                    <div className=\"pink-text col s3 zone\">Magellan Default Values</div>\r\n                                </div>\r\n                                {mappingResult ? (\r\n                                    mappingResult.map(mappingSmall => <div className=\"row\">{\r\n                                        Object.keys(mappingSmall).map(key => {\r\n                                            return (\r\n                                                <div className=\"col s3 zone\">{mappingSmall[key]}</div>\r\n                                            )\r\n                                        })\r\n                                    }</div>\r\n                                    )\r\n                                ) : null}\r\n                                <button className=\"btn lighten-1 z-depth-0\"\r\n                                    style={{ backgroundColor: \"#0078bf\" }}\r\n                                    onClick={this.handleSave}>Save To Firestore</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col s1\"></div>\r\n                    </div>\r\n                </CSSTransition>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default DropFile;","// Information for each client in the client screen\r\n\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Icon } from 'react-materialize';\r\n\r\nclass ClientSummary extends React.Component {\r\n    render() {\r\n        const { client, onRemove } = this.props\r\n        return (\r\n            <div className=\"card\" style={{ borderRadius: 10 }}>\r\n                <div className=\"card-content\">\r\n                    <div className=\"right\" style={{ color: \"#0078bf\" }} onClick={onRemove} >\r\n                        <Icon>delete</Icon>\r\n                    </div>\r\n                    <Link className=\"right\" style={{ color: \"#0078bf\" }}\r\n                        to={'/client-edit/' + client.id}>\r\n                        <Icon>edit</Icon>\r\n                    </Link>\r\n                    <Link className=\"right\"\r\n                        style={{ fontSize: 18, color: '#0078bf' }}\r\n                        to={'/ftp/' + client.id}>FTP</Link>\r\n                    <h5>Client Code: {client.id}</h5>\r\n                    <p>Client Name: {client.clientName}</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default ClientSummary;","// List of clients inside client screen.\r\n\r\nimport React from 'react';\r\nimport ClientSummary from './ClientSummary';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport axios from 'axios';\r\n\r\nclass ClientList extends React.Component {\r\n    state = {\r\n        clients: [],\r\n    };\r\n\r\n    componentDidMount() {\r\n        // get client list\r\n        axios.get('/clients').then(res => this.setState({ clients: res.data }))\r\n            .catch(error => console.log(error));;\r\n    };\r\n\r\n    handleRemove = id => {\r\n        confirmAlert({\r\n            title: 'Confirm to delete',\r\n            message: 'Are you sure you want to delete the client with its mapping?',\r\n            buttons: [{\r\n                label: 'Delete',\r\n                onClick: () => this.handleYes(id)\r\n            }, {\r\n                label: 'Cancel',\r\n                onClick: () => alert('Delete Action Canceled')\r\n            }]\r\n        });\r\n    };\r\n\r\n    handleYes = id => {\r\n        // delete client\r\n        axios.delete('/clients/' + id).then(res => console.log(res.data))\r\n            .catch(error => console.log(error));\r\n\r\n        this.setState({\r\n            clients: this.state.clients.filter(el => el.id !== id)\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"section\">\r\n                {this.state.clients.map(client => {\r\n                    return (\r\n                        <ClientSummary client={client}\r\n                            onRemove={() => this.handleRemove(client.id)}\r\n                            key={client.id} />\r\n                    )\r\n                })}\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default ClientList;","// Create new client form inside client screen\r\n\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n\r\nclass CreateClient extends React.Component {\r\n    state = {\r\n        clientCode: '',\r\n        clientName: ''\r\n    };\r\n\r\n    handleChange = e => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        const { clientCode, clientName } = this.state\r\n        if (clientCode !== '' && clientName !== '') {\r\n            // create new client\r\n            axios.post('/clients/create', this.state)\r\n                .then(res => console.log(res.data))\r\n                .then(() => alert(\"Data Stored in Firestore\"))\r\n                .catch(error => console.log(error));\r\n        } else alert('Please Enter All Fields');\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"section\">\r\n                <div className=\"card\" style={{ borderRadius: 10 }}>\r\n                    <div className=\"card-content\">\r\n                        <form onSubmit={this.handleSubmit} className=\"white\">\r\n                            <h5 className=\"grey-text text-darken-3\">Create Client</h5>\r\n                            <div className=\"input-field\">\r\n                                <label htmlFor=\"clientCode\">Client Code</label>\r\n                                <input type=\"text\" id=\"clientCode\" onChange={this.handleChange} />\r\n                            </div>\r\n                            <div className=\"input-field\">\r\n                                <label htmlFor=\"clientName\">Client Name</label>\r\n                                <input type=\"text\" id=\"clientName\" onChange={this.handleChange} />\r\n                            </div>\r\n                            <div className=\"input-field\">\r\n                                <button className=\"btn lighten-1 z-depth-0\"\r\n                                    style={{ backgroundColor: \"#0078bf\" }}>Create</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default CreateClient;","// Client Screen\r\n\r\nimport React from 'react';\r\nimport ClientList from './ClientList';\r\nimport CreateClient from './CreateClient';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nclass ClientScreen extends React.Component {\r\n    render() {\r\n        return (\r\n            <CSSTransition in={true} appear={true} timeout={1000} classNames=\"fade\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s1\"></div>\r\n                    <div className=\"col s5\">\r\n                        <ClientList />\r\n                    </div>\r\n                    <div className=\"col s5\">\r\n                        <CreateClient />\r\n                    </div>\r\n                    <div className=\"col s1\"></div>\r\n                </div>\r\n            </CSSTransition>\r\n        );\r\n    };\r\n};\r\n\r\nexport default ClientScreen;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport axios from 'axios';\r\n\r\nclass EditClient extends React.Component {\r\n    state = {\r\n        id: '',\r\n        clientName: ''\r\n    };\r\n\r\n    componentDidMount() {\r\n        axios.get('/clients/' + this.props.match.params.id)\r\n            .then(response => this.setState({\r\n                id: response.data.id,\r\n                clientName: response.data.clientName,\r\n            })).catch(error => console.log(error));\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    };\r\n\r\n    handleSubmit = () => {\r\n        const { id, clientName } = this.state\r\n        if (clientName !== '') {\r\n            const theClient = {\r\n                id: id,\r\n                clientName: clientName\r\n            }\r\n            // edit client\r\n            axios.post('/clients/edit/' + id, theClient)\r\n                .then(res => console.log(res.data))\r\n                .catch(error => console.log(error));\r\n        } else alert('Please Enter All Fields to Edit Client Information');\r\n    };\r\n\r\n    render() {\r\n        const { id } = this.state\r\n        return (\r\n            <CSSTransition in={true} appear={true} timeout={1000} classNames=\"fade\">\r\n                <div className=\"container section\">\r\n                    <div className=\"card\" style={{ borderRadius: 10, height: 200 }}>\r\n                        <div className=\"card-content\">\r\n                            <form className=\"white\">\r\n                                <h5 className=\"grey-text text-darken-3\">{`Edit Client ${id}`}</h5>\r\n                                <div className=\"input-field\">\r\n                                    <label htmlFor=\"clientName\">Client Name</label>\r\n                                    <input type=\"text\" id=\"clientName\" onChange={this.handleChange} />\r\n                                </div>\r\n                                <Link onClick={(e) => this.handleSubmit(e)}\r\n                                    className=\"btn lighten-1 z-depth-0 right\"\r\n                                    style={{ backgroundColor: \"#0078bf\" }}\r\n                                    to={\"/client\"}>Save</Link>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </CSSTransition>\r\n        );\r\n    };\r\n};\r\n\r\nexport default EditClient","// Create new FTP server form inside ftp screen\r\n\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n\r\nclass CreateFTP extends React.Component {\r\n    state = {\r\n        host: '',\r\n        port: '',\r\n        pathInputs: '',\r\n        pathProcess: '',\r\n        pathError: '',\r\n        pathOutputs: '',\r\n        user: '',\r\n        password: '',\r\n    };\r\n\r\n    handleChange = e => this.setState({ [e.target.id]: e.target.value });\r\n\r\n    handleSubmit = e => {\r\n        const { host, port, pathInputs, pathError, pathProcess, pathOutputs, user, password } = this.state\r\n        const { clientCode } = this.props\r\n        if (host !== '' && port !== '' && pathInputs !== '' && pathProcess !== ''\r\n            && pathError !== '' && pathOutputs !== '' && user !== '' && password !== '') {\r\n            const created = {\r\n                clientCode: clientCode,\r\n                host: host,\r\n                port: port,\r\n                pathInputs: pathInputs,\r\n                pathProcess: pathProcess,\r\n                pathError: pathError,\r\n                pathOutputs: pathOutputs,\r\n                user: user,\r\n                password: password,\r\n            }\r\n            // create ftp server\r\n            axios.post('/ftps/create', created).then(res => console.log(res.data))\r\n                .then(() => alert(\"Data Stored in Firestore\"))\r\n                .catch(error => console.log(error));\r\n        } else alert(\"Please Enter All Fields\");\r\n    };\r\n\r\n    render() {\r\n        const { clientCode } = this.props\r\n        return (\r\n            <div className=\"section\">\r\n                <div className=\"card\" style={{ borderRadius: 10 }}>\r\n                    <div className=\"card-content\">\r\n                        <form onSubmit={this.handleSubmit} className=\"white\">\r\n                            <h5 className=\"grey-text text-darken-3\">{`Create FTP Server for Client ${clientCode}`}</h5>\r\n                            <div className=\"input-field\">\r\n                                <label htmlFor=\"host\">Host Address</label>\r\n                                <input type=\"text\" id=\"host\" onChange={this.handleChange} />\r\n                            </div>\r\n                            <div className=\"input-field\">\r\n                                <label htmlFor=\"port\">Port (Default is 21)</label>\r\n                                <input type=\"text\" id=\"port\" onChange={this.handleChange} />\r\n                            </div>\r\n                            <div className=\"input-field\">\r\n                                <label htmlFor=\"pathInputs\">Inputs Path</label>\r\n                                <input type=\"text\" id=\"pathInputs\" onChange={this.handleChange} />\r\n                            </div>\r\n                            <div className=\"input-field\">\r\n                                <label htmlFor=\"pathProcess\">Process Path</label>\r\n                                <input type=\"text\" id=\"pathProcess\" onChange={this.handleChange} />\r\n                            </div>\r\n                            <div className=\"input-field\">\r\n                                <label htmlFor=\"pathError\">Error Path</label>\r\n                                <input type=\"text\" id=\"pathError\" onChange={this.handleChange} />\r\n                            </div>\r\n                            <div className=\"input-field\">\r\n                                <label htmlFor=\"pathOutputs\">Outputs Path</label>\r\n                                <input type=\"text\" id=\"pathOutputs\" onChange={this.handleChange} />\r\n                            </div>\r\n                            <div className=\"input-field\">\r\n                                <label htmlFor=\"user\">Username</label>\r\n                                <input type=\"text\" id=\"user\" onChange={this.handleChange} />\r\n                            </div>\r\n                            <div className=\"input-field\">\r\n                                <label htmlFor=\"password\">Password</label>\r\n                                <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                            </div>\r\n                            <div className=\"input-field\">\r\n                                <button className=\"btn lighten-1 z-depth-0\"\r\n                                    style={{ backgroundColor: \"#0078bf\" }}>Create</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreateFTP","// Information for each FTP server in the FTP screen\r\n\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Icon } from 'react-materialize';\r\n\r\nclass FTPSummary extends React.Component {\r\n    render() {\r\n        const { ftp, onRemove } = this.props;\r\n        return (\r\n            <div className=\"card\" style={{ borderRadius: 10 }}>\r\n                <div className=\"card-content\">\r\n                    <div className=\"right\" onClick={onRemove} style={{ color: \"#0078bf\" }}>\r\n                        <Icon>delete</Icon>\r\n                    </div>\r\n                    <Link className=\"right\" style={{ color: \"#0078bf\" }}\r\n                        to={'/ftp-edit/' + ftp.id}>\r\n                        <Icon>edit</Icon>\r\n                    </Link>\r\n                    <h5>Host Address: {ftp.host}</h5>\r\n                    <div className=\"row\">\r\n                        <div className=\"pink-text col s4\">\r\n                            <p>Port</p>\r\n                            <p>Inputs Path</p>\r\n                            <p>Process Path</p>\r\n                            <p>Error Path</p>\r\n                            <p>Outputs Path</p>\r\n                            <p>Client Code</p>\r\n                            <p>User Name</p>\r\n                            <p>Password</p>\r\n                        </div>\r\n                        <div className=\"col s8\">\r\n                            <p>{ftp.port}</p>\r\n                            <p>{ftp.pathInputs}</p>\r\n                            <p>{ftp.pathProcess}</p>\r\n                            <p>{ftp.pathError}</p>\r\n                            <p>{ftp.pathOutputs}</p>\r\n                            {ftp.clientCode === ''\r\n                                ? <p>N/A</p>\r\n                                : <p>{ftp.clientCode}</p>\r\n                            }\r\n                            <p>{ftp.user}</p>\r\n                            <p>{ftp.password}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default FTPSummary;","// FTP Screen\r\n\r\nimport React from 'react';\r\nimport CreateFTP from './CreateFTP';\r\nimport FTPSummary from './FTPSummary';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport axios from 'axios';\r\n\r\nclass FTPScreen extends React.Component {\r\n    state = {\r\n        clientCode: '',\r\n        ftps: [],\r\n    };\r\n\r\n    componentDidMount() {\r\n        // get that client's ftp servers\r\n        axios.get('/ftps').then(response => {\r\n            if (response.data.length > 0) {\r\n                this.setState({\r\n                    ftps: response.data.filter(ftp => ftp.clientCode === this.props.match.params.id),\r\n                    clientCode: this.props.match.params.id\r\n                });\r\n            }\r\n        }).catch(error => console.log(error));\r\n    };\r\n\r\n    handleRemove = id => {\r\n        confirmAlert({\r\n            title: 'Confirm to delete',\r\n            message: 'Are you sure you want to delete the FTP server?',\r\n            buttons: [{\r\n                label: 'Delete',\r\n                onClick: () => this.handleYes(id)\r\n            }, {\r\n                label: 'Cancel',\r\n                onClick: () => alert('Delete Action Canceled')\r\n            }]\r\n        });\r\n    };\r\n\r\n    handleYes = id => {\r\n        // delete ftp server\r\n        axios.delete('/ftps/' + id).then(res => console.log(res.data))\r\n            .catch(error => console.log(error));\r\n\r\n        this.setState({\r\n            ftps: this.state.ftps.filter(el => el._id !== id)\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { clientCode, ftps } = this.state\r\n        return (\r\n            <CSSTransition in={true} appear={true} timeout={1000} classNames=\"fade\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s1\"></div>\r\n                    <div className=\"col s5\">\r\n                        <div className=\"section\">\r\n                            <div className=\"card\" style={{ borderRadius: 10 }}>\r\n                                <div className=\"card-content\">\r\n                                    <h5>{`Client: ${clientCode}`}</h5>\r\n                                </div>\r\n                            </div>\r\n                            {ftps.map(ftp => {\r\n                                return <FTPSummary ftp={ftp} onRemove={() => this.handleRemove(ftp.id)} />;\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col s5\">\r\n                        <CreateFTP clientCode={clientCode} />\r\n                    </div>\r\n                    <div className=\"col s1\"></div>\r\n                </div>\r\n            </CSSTransition>\r\n        );\r\n    };\r\n};\r\n\r\nexport default FTPScreen;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport axios from 'axios';\r\n\r\nclass EditFTP extends React.Component {\r\n    state = {\r\n        id: '',\r\n        ftp: {\r\n            clientCode: '',\r\n            host: '',\r\n            port: '',\r\n            pathInputs: '',\r\n            pathProcess: '',\r\n            pathError: '',\r\n            pathOutputs: '',\r\n            user: '',\r\n            password: '',\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        // get ftp server info\r\n        axios.get('/ftps/' + this.props.match.params.id)\r\n            .then(response => this.setState({\r\n                id: this.props.match.params.id,\r\n                ftp: response.data\r\n            }))\r\n            .catch(error => console.log(error));\r\n    };\r\n\r\n    // Change\r\n    handleChange = e => {\r\n        this.setState({\r\n            ftp: {\r\n                ...this.state.ftp,\r\n                [e.target.id]: e.target.value\r\n            }\r\n        });\r\n    };\r\n\r\n    handleSubmit = () => {\r\n        const { id } = this.state;\r\n        const { host, port, pathInputs, pathProcess, pathError, pathOutputs, clientCode, user, password } = this.state.ftp\r\n        if (host !== '' && port !== '' && pathInputs !== '' && pathProcess !== '' && pathError !== ''\r\n            && pathOutputs !== '' && clientCode !== '' && user !== '' && password !== '') {\r\n            const theFTP = {\r\n                host: host,\r\n                port: port,\r\n                pathInputs: pathInputs,\r\n                pathProcess: pathProcess,\r\n                pathError: pathError,\r\n                pathOutputs: pathOutputs,\r\n                clientCode: clientCode,\r\n                user: user,\r\n                password: password\r\n            }\r\n            // edit ftp server\r\n            axios.post('/ftps/edit/' + id, theFTP).then(res => console.log(res.data))\r\n                .catch(error => console.log(error));\r\n        } else alert('Please Enter All Fields to Edit FTP Information');\r\n    };\r\n\r\n    render() {\r\n        const { clientCode } = this.state.ftp\r\n        return (\r\n            <CSSTransition in={true} appear={true} timeout={1000} classNames=\"fade\">\r\n                <div className=\"container section\">\r\n                    <div className=\"card\" style={{ borderRadius: 10, height: 700 }}>\r\n                        <div className=\"card-content\">\r\n                            <form className=\"white\">\r\n                                <h5 className=\"grey-text text-darken-3\">{`Edit FTP Server for Client ${clientCode}`}</h5>\r\n                                <div className=\"input-field\">\r\n                                    <label htmlFor=\"host\">FTP Host Address</label>\r\n                                    <input type=\"text\" id=\"host\" onChange={this.handleChange} />\r\n                                </div>\r\n                                <div className=\"input-field\">\r\n                                    <label htmlFor=\"port\">FTP Port</label>\r\n                                    <input type=\"text\" id=\"port\" onChange={this.handleChange} />\r\n                                </div>\r\n                                <div className=\"input-field\">\r\n                                    <label htmlFor=\"pathInputs\">FTP Input Path</label>\r\n                                    <input type=\"text\" id=\"pathInputs\" onChange={this.handleChange} />\r\n                                </div>\r\n                                <div className=\"input-field\">\r\n                                    <label htmlFor=\"pathProcess\">FTP Process Path</label>\r\n                                    <input type=\"text\" id=\"pathProcess\" onChange={this.handleChange} />\r\n                                </div>\r\n                                <div className=\"input-field\">\r\n                                    <label htmlFor=\"id\">FTP Error Path</label>\r\n                                    <input type=\"text\" id=\"id\" onChange={this.handleChange} />\r\n                                </div>\r\n                                <div className=\"input-field\">\r\n                                    <label htmlFor=\"pathOutputs\">FTP Output Path</label>\r\n                                    <input type=\"text\" id=\"pathOutputs\" onChange={this.handleChange} />\r\n                                </div>\r\n                                <div className=\"input-field\">\r\n                                    <label htmlFor=\"user\">User Name</label>\r\n                                    <input type=\"text\" id=\"user\" onChange={this.handleChange} />\r\n                                </div>\r\n                                <div className=\"input-field\">\r\n                                    <label htmlFor=\"password\">Password</label>\r\n                                    <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                                </div>\r\n                                <Link onClick={(e) => this.handleSubmit(e)}\r\n                                    className=\"btn lighten-1 z-depth-0 right\"\r\n                                    style={{ backgroundColor: \"#0078bf\" }}\r\n                                    to={'/ftp/' + clientCode}>Save</Link>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </CSSTransition>\r\n        );\r\n    };\r\n};\r\n\r\nexport default EditFTP;","import React from 'react';\r\nimport { Icon } from 'react-materialize';\r\n\r\nclass AdminSummary extends React.Component {\r\n    render() {\r\n        const { admin, onRemove } = this.props\r\n        return (\r\n            <div className=\"card\" style={{ borderRadius: 10 }}>\r\n                <div className=\"card-content\">\r\n                    <div className=\"right\" style={{ color: \"#0078bf\" }} onClick={onRemove} >\r\n                        <Icon>delete</Icon>\r\n                    </div>\r\n                    <h5>Admin Email: {admin.email}</h5>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default AdminSummary;","import React from 'react';\r\nimport AdminSummary from './AdminSummary';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport axios from 'axios';\r\n\r\nclass AdminList extends React.Component {\r\n    state = {\r\n        admins: [],\r\n    };\r\n\r\n    componentDidMount() {\r\n        // get admin list\r\n        axios.get('/admins').then(res => this.setState({ admins: res.data }))\r\n            .catch(error => console.log(error));\r\n    };\r\n\r\n    handleRemove = id => {\r\n        confirmAlert({\r\n            title: 'Confirm to delete',\r\n            message: 'Are you sure you want to delete the admin?',\r\n            buttons: [{\r\n                label: 'Delete',\r\n                onClick: () => this.handleYes(id)\r\n            }, {\r\n                label: 'Cancel',\r\n                onClick: () => alert('Delete Action Canceled')\r\n            }]\r\n        });\r\n    };\r\n\r\n    handleYes = id => {\r\n        // delete admin\r\n        axios.delete('/admins/' + id)\r\n            .then(res => console.log(res.data))\r\n            .catch(error => console.log(error));\r\n\r\n        this.setState({\r\n            admins: this.state.admins.filter(el => el.id !== id)\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { admins } = this.state\r\n        return (\r\n            <div className=\"section\">\r\n                {admins.map(admin => {\r\n                    return <AdminSummary admin={admin} onRemove={() => this.handleRemove(admin.id)} />\r\n                })}\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default AdminList;","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nclass CreateAdmin extends React.Component {\r\n    state = {\r\n        email: ''\r\n    };\r\n\r\n    handleChange = e => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        });\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        // create new admin\r\n        axios.post('/admins/create', { email: this.state.email })\r\n            .then(res => console.log(res.data))\r\n            .then(() => alert(\"Data Stored in Firestore\"))\r\n            .catch(error => console.log(error));\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"section\">\r\n                <div className=\"card\" style={{ borderRadius: 10 }}>\r\n                    <div className=\"card-content\">\r\n                        <form onSubmit={this.handleSubmit} className=\"white\">\r\n                            <h5 className=\"grey-text text-darken-3\">Create Admin</h5>\r\n                            <div className=\"input-field\">\r\n                                <label htmlFor=\"email\">Admin Email Address</label>\r\n                                <input type=\"text\" id=\"email\" onChange={this.handleChange} />\r\n                            </div>\r\n                            <div className=\"input-field\">\r\n                                <button className=\"btn lighten-1 z-depth-0\"\r\n                                    style={{ backgroundColor: \"#0078bf\" }}>Create</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        );\r\n    };\r\n};\r\n\r\nexport default CreateAdmin;","import React from 'react';\r\nimport AdminList from './AdminList';\r\nimport CreateAdmin from './CreateAdmin';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nclass AdminScreen extends React.Component {\r\n    render() {\r\n        return (\r\n            <CSSTransition in={true} appear={true} timeout={1000} classNames=\"fade\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s1\"></div>\r\n                    <div className=\"col s5\">\r\n                        <AdminList />\r\n                    </div>\r\n                    <div className=\"col s5\">\r\n                        <CreateAdmin />\r\n                    </div>\r\n                    <div className=\"col s1\"></div>\r\n                </div>\r\n            </CSSTransition>\r\n        );\r\n    };\r\n};\r\n\r\nexport default AdminScreen;","export default __webpack_public_path__ + \"static/media/Admins.f84c196f.PNG\";","export default __webpack_public_path__ + \"static/media/Clients.154ca517.PNG\";","export default __webpack_public_path__ + \"static/media/Dropzone.3759649e.PNG\";","export default __webpack_public_path__ + \"static/media/FTPServers.4b5bb8d2.PNG\";","export default __webpack_public_path__ + \"static/media/Notifications.abdc1d53.PNG\";","export default __webpack_public_path__ + \"static/media/SavedMapping.acea632d.PNG\";","import React from \"react\";\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\n// Intro\r\n// Notifications\r\n// Mapping\r\n//  - Saved\r\n//  - Dropzone\r\n// Clients\r\n//  - Clients\r\n//  - FTPs\r\n// Admins\r\n\r\nimport adminImage from \"../images/Admins.PNG\";\r\nimport clientImage from \"../images/Clients.PNG\";\r\nimport dropzoneImage from \"../images/Dropzone.PNG\";\r\nimport serverImage from \"../images/FTPServers.PNG\";\r\nimport notiImage from \"../images/Notifications.PNG\";\r\nimport savedImage from \"../images/SavedMapping.PNG\";\r\n\r\nvar Scroll = require('react-scroll');\r\nvar scroll = Scroll.animateScroll;\r\n\r\nclass Dashboard extends React.Component {\r\n    handleScroll = (e) => {\r\n        scroll.scrollTo(e.target.value)\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <CSSTransition in={true} appear={true} timeout={1000} classNames=\"fade\">\r\n                <div className=\"container section\">\r\n                    <div className=\"card\" style={{ borderRadius: 10 }}>\r\n                        <div className=\"card-content\">\r\n                            <h3>MAGELLAN CSV TO XML SYSTEM</h3>\r\n                            <div style={{ fontSize: 16 }}>This is a system designed for Magellan Logistics Company to translate\r\n                        customer's input CSV file to XML file to load into FTP server.</div>\r\n                            <div style={{ fontSize: 16 }}>The system consists of 6 main components:</div>\r\n                            <div className=\"row\" style={{ fontSize: 18 }}>\r\n                                <div className=\"col s4\">\r\n                                    <li value={315} onClick={(e) => this.handleScroll(e)} style={{ color: \"#0078bf\" }}>Notifications</li>\r\n                                    <li value={1100} onClick={(e) => this.handleScroll(e)} style={{ color: \"#0078bf\" }}>Create Mapping</li>\r\n                                    <li value={1880} onClick={(e) => this.handleScroll(e)} style={{ color: \"#0078bf\" }}>FTP Servers</li>\r\n                                </div>\r\n                                <div className=\"col s8\">\r\n                                    <li value={700} onClick={(e) => this.handleScroll(e)} style={{ color: \"#0078bf\" }}>Saved Mapping</li>\r\n                                    <li value={1500} onClick={(e) => this.handleScroll(e)} style={{ color: \"#0078bf\" }}>Clients</li>\r\n                                    <li value={2020} onClick={(e) => this.handleScroll(e)} style={{ color: \"#0078bf\" }}>Admins</li>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card\" style={{ borderRadius: 10 }}>\r\n                        <div className=\"card-content\">\r\n                            <h4>Notifications</h4>\r\n                            <div className=\"row\">\r\n                                <div className=\"col s6\" style={{ fontSize: 18 }}>\r\n                                    <div>This screen shows all the notifications created while processing CSV files,\r\n                                    including all success and error cases</div>\r\n                                    <br />\r\n                                    <div>The user can use the filter options on the right of the screen to filter\r\n                                    some information including: the notification type and the client code</div>\r\n                                </div>\r\n                                <div className=\"col s6\">\r\n                                    <img style={{ width: 480, borderRadius: 10 }} src={notiImage} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card\" style={{ borderRadius: 10 }}>\r\n                        <div className=\"card-content\">\r\n                            <h4>Saved Mapping</h4>\r\n                            <div className=\"row\">\r\n                                <div className=\"col s6\">\r\n                                    <img style={{ width: 480, borderRadius: 10 }} src={savedImage} />\r\n                                </div>\r\n                                <div className=\"col s6\" style={{ fontSize: 18 }}>\r\n                                    <div>This screen shows all the saved mapping information\r\n                                    of each existing client</div>\r\n                                    <br />\r\n                                    <div>The user can choose the client code from the dropdown list\r\n                                    to view that client's mapping information</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card\" style={{ borderRadius: 10 }}>\r\n                        <div className=\"card-content\">\r\n                            <h4>Create Mapping</h4>\r\n                            <div className=\"row\">\r\n                                <div className=\"col s6\" style={{ fontSize: 18 }}>\r\n                                    <div>This screen allows the user to create new mapping information for a client by choosing the client code\r\n                                    from the dropdownlist, and dropping a CSV file containing all mapping information of the client</div>\r\n                                </div>\r\n                                <div className=\"col s6\">\r\n                                    <img style={{ width: 480, borderRadius: 10 }} src={dropzoneImage} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card\" style={{ borderRadius: 10 }}>\r\n                        <div className=\"card-content\">\r\n                            <h4>Clients</h4>\r\n                            <div className=\"row\">\r\n                                <div className=\"col s6\">\r\n                                    <img style={{ width: 480, borderRadius: 10 }} src={clientImage} />\r\n                                </div>\r\n                                <div className=\"col s6\" style={{ fontSize: 18 }}>\r\n                                    <div>This screen shows all the client information stored in the system's database</div>\r\n                                    <br />\r\n                                    <div>The user can add, edit, or delete the client information.\r\n                                    The user can also view client's FTP server information</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card\" style={{ borderRadius: 10 }}>\r\n                        <div className=\"card-content\">\r\n                            <h4>FTP Servers</h4>\r\n                            <div className=\"row\">\r\n                                <div className=\"col s6\" style={{ fontSize: 18 }}>\r\n                                    <div>This screen shows all FTP server information of a particular client, chosen in Clients screen</div>\r\n                                    <br />\r\n                                    <div>The user can add, edit, or delete the FTP server's information</div>\r\n                                </div>\r\n                                <div className=\"col s6\">\r\n                                    <img style={{ width: 480, borderRadius: 10 }} src={serverImage} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card\" style={{ borderRadius: 10 }}>\r\n                        <div className=\"card-content\">\r\n                            <h4>Admins</h4>\r\n                            <div className=\"row\">\r\n                                <div className=\"col s6\">\r\n                                    <img style={{ width: 480, borderRadius: 10 }} src={adminImage} />\r\n                                </div>\r\n                                <div className=\"col s6\" style={{ fontSize: 18 }}>\r\n                                    <div>This screen shows all admins' email address. Whenever an error occurs within the system,\r\n                                    an email will be sent to these provided admins' email adress with detailed information of the error.\r\n                                </div>\r\n                                    <br />\r\n                                    <div>The user can add or delete the admins' email address</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </CSSTransition >\r\n        );\r\n    };\r\n};\r\n\r\nexport default Dashboard;","import React from 'react';\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\n// Navigation Bar\nimport NavBar from \"./components/layout/NavBar\";\n// Notifications\nimport NotificationScreen from \"./components/notifications/NotificationScreen\";\n// Saved Mapping\nimport Mapping from './components/mapping/Mapping';\n// Create Mapping\nimport DropFile from './components/mapping/DropFile';\n// Clients\nimport ClientScreen from './components/client/ClientScreen';\nimport EditClient from './components/client/EditClient';\n// FTPs\nimport FTPScreen from './components/ftp/FTPScreen';\nimport EditFTP from './components/ftp/EditFTP';\n// Admins\nimport Admin from './components/admin/AdminScreen';\n// Dashboard\nimport Dashboard from './components/Dashboard';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <NavBar />\n          <Switch>\n            <Route exact path='/' component={Dashboard} />\n            <Route path=\"/notification\" component={NotificationScreen} />\n            <Route path=\"/mapping-drop-file\" component={DropFile} />\n            <Route path=\"/mapping\" component={Mapping} />\n            <Route path=\"/client\" component={ClientScreen} />\n            <Route path=\"/client-edit/:id\" component={EditClient} />\n            <Route path=\"/ftp/:id\" component={FTPScreen} />\n            <Route path=\"/ftp-edit/:id\" component={EditFTP} />\n            <Route path=\"/admin\" component={Admin} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  };\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}